(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{599:function(t,a,s){"use strict";s.r(a);var e=s(17),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"学习vue3-一"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#学习vue3-一"}},[t._v("#")]),t._v(" 学习vue3（一）")]),t._v(" "),s("h2",{attrs:{id:"一、api风格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、api风格"}},[t._v("#")]),t._v(" 一、API风格")]),t._v(" "),s("p",[t._v("vue组件Vue 的组件可以按两种不同的风格书写："),s("strong",[t._v("选项式 API")]),t._v(" 和"),s("strong",[t._v("组合式 API")]),t._v("。")]),t._v(" "),s("p",[t._v("选项式API：选项所定义的属性都会暴露在函数内部的 "),s("code",[t._v("this")]),t._v(" 上，它会指向当前的组件实例。")]),t._v(" "),s("p",[t._v("组合式API：在单文件组件中，组合式 API 通常会与 "),s("code",[t._v("<script setup>")]),t._v("搭配使用。")]),t._v(" "),s("h2",{attrs:{id:"二、declarative-rendering"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、declarative-rendering"}},[t._v("#")]),t._v(" 二、Declarative Rendering")]),t._v(" "),s("p",[t._v("使用模板语法来组织html结构，使用js来表示状态，当状态改变时，对应的html结构和其中的数据也会发生相应变化。")]),t._v(" "),s("p",[t._v("使用setup语法糖，我们不必手动将响应式数据return，可以直接在模板中使用，使用时也不需要加上类似.value这样的东西，因为为了方便使用，vue自动对模板里的响应式数据做了处理。")]),t._v(" "),s("p",[t._v("mustaches（emm...文档里把双花括号叫做“胡子”）里的内容也可也是简单的js表达式")]),t._v(" "),s("h3",{attrs:{id:"_1-reactive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-reactive"}},[t._v("#")]),t._v(" 1. reactive()")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" reactive "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reactive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("counter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\ncounter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n")])])]),s("p",[s("strong",[t._v("需要注意")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("reactive包裹是幂等的，也就是说无论用reactive对原始对象包裹多少次，得到的都是同一个代理。")])]),t._v(" "),s("li",[s("p",[t._v("代理是深层次的，代理的属性如果也是对象，那么这个属性对象也是一个代理")])]),t._v(" "),s("li",[s("p",[t._v("reactive只作用于对象类型。")])]),t._v(" "),s("li",[s("p",[t._v("必须基于reactive返回的proxy进行的操作才具有响应性。把该对象的属性解构出来、赋值给普通变量或者传入函数都会失去响应性。")])]),t._v(" "),s("li",[s("p",[t._v("要获得浅层响应性使用"),s("code",[t._v("shallowReactive()")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reactive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// n 是一个局部变量，同 state.count")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 失去响应性连接")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不影响原始的 state")]),t._v("\nn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// count 也和 state.count 失去了响应性连接")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" state\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不会影响原始的 state")]),t._v("\ncount"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该函数接收一个普通数字，并且")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将无法跟踪 state.count 的变化")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callSomeFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TS类型标注")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Book")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string\n  year"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("book")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Book "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reactive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Vue 3 指引'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-ref"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-ref"}},[t._v("#")]),t._v(" 2. ref()")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("可以用于任何值类型。")])]),t._v(" "),s("li",[s("p",[t._v("返回一个带.value属性的ref对象。")])]),t._v(" "),s("li",[s("p",[t._v("TS类型示例："),s("code",[t._v("const year = ref<number | string>('2022')")]),t._v("（不指明会自动推导）")])]),t._v(" "),s("li",[s("p",[t._v("ref得到的对象可以响应式替换。")])]),t._v(" "),s("li",[s("p",[t._v("ref传入参数和解构都能保持响应性。")])]),t._v(" "),s("li",[s("p",[t._v("在模板中的解包只适用于顶层属性。不过如果该ref是mustache的最终值也会被解包。")])])]),t._v(" "),s("h3",{attrs:{id:"_3-computed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-computed"}},[t._v("#")]),t._v(" 3. computed")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("类型标注示例"),s("code",[t._v("const a = computed<number>(() => {})")])])]),t._v(" "),s("li",[s("p",[t._v("返回一个计算属性ref")])]),t._v(" "),s("li",[s("p",[t._v("可以定义一个getter和setter，默认是只能get")])]),t._v(" "),s("li",[s("p",[t._v("基于依赖缓存")])]),t._v(" "),s("li",[s("p",[t._v("只负责计算和返回值，不要有副作用。")])])]),t._v(" "),s("h3",{attrs:{id:"_4-watch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-watch"}},[t._v("#")]),t._v(" 4. watch")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("监听响应式依赖的变化，对变化作出某些操作，可以是异步操作，也可以操作DOM等等，这是它与computed的区别。")])]),t._v(" "),s("li",[s("p",[t._v("监听源可以是ref、computedRef、getter、reactive Object或者包含多个源的数组。getter是形如"),s("code",[t._v("() => x.value + y.value")]),t._v("的函数.")])]),t._v(" "),s("li",[s("p",[t._v("不能"),s("code",[t._v("watch(obj.count , () => {})")]),t._v("，而是"),s("code",[t._v("watch(()=>obj.count , () => {})")])])]),t._v(" "),s("li",[s("p",[t._v("对象的监听需要注意深度监听的问题。getter得到的对象是值的监听，直接传入对象是深度监听。不过可以使用第三个参数对象"),s("code",[t._v("{deep: true}")]),t._v("指明深度监听。")])]),t._v(" "),s("li",[s("p",[t._v("深度监听非必要不用，因为遍历属性需要开销。")])]),t._v(" "),s("li",[s("p",[t._v("只有源变化才调用，第一次不调用")])])]),t._v(" "),s("h3",{attrs:{id:"_5-watcheffect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-watcheffect"}},[t._v("#")]),t._v(" 5. watchEffect")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("行为与computed类似，会自动追踪依赖，与computed的区别就是可以进行一些除计算值之外的操作。")])]),t._v(" "),s("li",[s("p",[t._v("使用方式"),s("code",[t._v("watchEffect(() => {})")])])]),t._v(" "),s("li",[s("p",[t._v("需要第一次调用且watch就可以使用它。")])]),t._v(" "),s("li",[s("p",[t._v("watch只追踪第一个参数，而watchEffect追踪函数内的所有依赖。")])]),t._v(" "),s("li",[s("p",[t._v("不过它的缺点就是响应式依赖不明确，因为它全都追踪（我全要.jpg），watch相对来说更专注。")])])]),t._v(" "),s("p",[s("strong",[t._v("注意：")])]),t._v(" "),s("ul",[s("li",[t._v("watch和watchEffect的回调函数默认都是"),s("strong",[t._v("在DOM更新前执行")]),t._v("，如果你想在回调里操作更新后的DOM，需要在参数对象中指明：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("watch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("flush")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'post'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("watchEffect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("flush")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'post'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("watcher会在组件销毁时自动销毁，因为它隶属于组件实例。但是"),s("strong",[t._v("如果watcher是在异步回调里创建的，就不属于组件实例，且不会自动销毁！！！")])])]),t._v(" "),s("li",[s("p",[t._v("要手动销毁，调用创造watcher时返回的函数即可。")])])]),t._v(" "),s("h3",{attrs:{id:"_6-watchposteffect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-watchposteffect"}},[t._v("#")]),t._v(" 6. watchPostEffect")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("watchEffect(callback , { flush: 'post' })")]),t._v("的语法糖。")])]),t._v(" "),s("h3",{attrs:{id:"_7-ref属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-ref属性"}},[t._v("#")]),t._v(" 7. ref属性")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("用于obtain子组件实例或DOM元素的引用，会在它们渲染完后获取到。")])]),t._v(" "),s("li",[s("p",[t._v("和v-for一起使用时，应该用一个数组来接收DOM引用。"),s("code",[t._v("const list = ref([])")])])]),t._v(" "),s("li",[s("p",[t._v("获取的引用有"),s("code",[t._v("textContet")]),t._v("、"),s("code",[t._v("tagName")]),t._v("、"),s("code",[t._v("outerHTML")]),t._v("、"),s("code",[t._v("outerText")]),t._v("等属性。")])]),t._v(" "),s("li",[s("p",[t._v("ref属性可以"),s("strong",[t._v("动态绑定一个函数")]),t._v("，函数的第一个参数就是DOM引用。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":ref")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("(el) => { /* assign el to a property or ref */ }"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("`\n")])])])]),t._v(" "),s("li",[s("p",[t._v("获取子组件时")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("子组件是option api，那么可以获取到子组件实例，即子组件中的this，this的所有东西都可以访问，不过尽量使用props而不是这种访问方式。")])]),t._v(" "),s("li",[s("p",[t._v("子组件是setup语法糖形式，那么啥也得不到。除非是子组件使用宏"),s("code",[t._v("defineExpose({ ... })")]),t._v("暴露的属性。")])])])])]),t._v(" "),s("h2",{attrs:{id:"三、class与style绑定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、class与style绑定"}},[t._v("#")]),t._v(" 三、class与style绑定")]),t._v(" "),s("h3",{attrs:{id:"_1-class绑定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-class绑定"}},[t._v("#")]),t._v(" 1. class绑定")]),t._v(" "),s("ul",[s("li",[t._v("绑定在组件上时，如果是单root组件，就会绑定在根root元素上。如果是多root组件，要使用"),s("code",[t._v("$attrs")]),t._v("指定。"),s("code",[t._v('<p :class="$attrs.class"></p>')])])]),t._v(" "),s("h3",{attrs:{id:"_2-style绑定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-style绑定"}},[t._v("#")]),t._v(" 2. style绑定")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("绑定行内样式，样式的属性名可以是驼峰式写法，也可以是单引号或双引号包裹的短横线写法。")])]),t._v(" "),s("li",[s("p",[t._v("如果使用了需要加浏览器前缀的属性，Vue会自动加上正确的浏览器前缀。也可以提供多值：")])])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":style")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{ display: ["),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("-webkit-box"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("-ms-flexbox"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("flex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("] }"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h2",{attrs:{id:"四、条件渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、条件渲染"}},[t._v("#")]),t._v(" 四、条件渲染")]),t._v(" "),s("h3",{attrs:{id:"_1-v-if"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-v-if"}},[t._v("#")]),t._v(" 1. v-if")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("可以配合"),s("code",[t._v("<template>")]),t._v("元素使用。")])]),t._v(" "),s("li",[s("p",[t._v("真正的条件渲染，会销毁和创建。")])])]),t._v(" "),s("h3",{attrs:{id:"_2-v-else-if"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-v-else-if"}},[t._v("#")]),t._v(" 2. v-else-if")]),t._v(" "),s("h3",{attrs:{id:"_3-v-else"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-v-else"}},[t._v("#")]),t._v(" 3. v-else")]),t._v(" "),s("h3",{attrs:{id:"_4-v-show"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-v-show"}},[t._v("#")]),t._v(" 4. v-show")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("通过切换"),s("code",[t._v("display")]),t._v("属性来显示隐藏元素")])]),t._v(" "),s("li",[s("p",[t._v("不能配合"),s("code",[t._v("<template>")]),t._v("和"),s("code",[t._v("v-else")]),t._v("使用。")])]),t._v(" "),s("li",[s("p",[t._v("适合频繁切换显示隐藏时使用")])])]),t._v(" "),s("h2",{attrs:{id:"五、list-rendering"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、list-rendering"}},[t._v("#")]),t._v(" 五、List Rendering")]),t._v(" "),s("h3",{attrs:{id:"_1-v-for"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-v-for"}},[t._v("#")]),t._v(" 1. v-for")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("v-for")]),t._v("中可以解构")])]),t._v(" "),s("li",[s("p",[t._v("除了使用"),s("code",[t._v("item in list")]),t._v("的方式，还可以使用"),s("code",[t._v("item of list")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("可以迭代对象的key、value和index，"),s("code",[t._v('v-for="(value , key , index) in obj"')])])]),t._v(" "),s("li",[s("p",[t._v("遍历对象属性时顺序是和"),s("code",[t._v("Object.keys()")]),t._v("一致。")])]),t._v(" "),s("li",[s("p",[t._v("可以配合"),s("code",[t._v("<template>")]),t._v("使用。")])]),t._v(" "),s("li",[s("p",[t._v("不建议和v-if在同一元素上使用。当一起出现时"),s("code",[t._v("v-if")]),t._v("的优先级更高（vue2中反过来）。这也意味这在v-if访问不到v-for作用域的变量。")])]),t._v(" "),s("li",[s("p",[t._v("可以在组件上使用，不过数据需要手动绑定传递，在组件里用props接收。")])])]),t._v(" "),s("h3",{attrs:{id:"_2-key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-key"}},[t._v("#")]),t._v(" 2. key")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("作为vue虚拟DOM算法的提示，用于比较更新节点。")])]),t._v(" "),s("li",[s("p",[t._v('"in-place patch" strategy，建议始终添加一个key属性，key的值期望是一个基础类型，不要是一个对象。')])]),t._v(" "),s("li",[s("p",[t._v("可以单独使用，用于过渡或触发生命周期钩子。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("transition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":key")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{ text }}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("transition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" \n")])])])])]),t._v(" "),s("h2",{attrs:{id:"六、array-change-detection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、array-change-detection"}},[t._v("#")]),t._v(" 六、Array Change Detection")]),t._v(" "),s("h3",{attrs:{id:"_1-修改原数组的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-修改原数组的方法"}},[t._v("#")]),t._v(" 1. 修改原数组的方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("push()")])]),t._v(" "),s("li",[s("code",[t._v("pop()")])]),t._v(" "),s("li",[s("code",[t._v("shift()")])]),t._v(" "),s("li",[s("code",[t._v("unshift()")])]),t._v(" "),s("li",[s("code",[t._v("splice()")])]),t._v(" "),s("li",[s("code",[t._v("sort()")]),t._v("：！！！")]),t._v(" "),s("li",[s("code",[t._v("reverse()")]),t._v("：！！！")])]),t._v(" "),s("p",[t._v("使用sort和reverse如果不想改变原数组，可以使用扩展运算符先拷贝一份。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" numbers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("numbers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-返回新数组的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-返回新数组的方法"}},[t._v("#")]),t._v(" 2. 返回新数组的方法")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("filter()")])]),t._v(" "),s("li",[s("p",[t._v("concat()")])]),t._v(" "),s("li",[s("p",[t._v("slice()")])]),t._v(" "),s("li",[s("p",[t._v("下面这种情况，vue会最大程度地重用DOM，而不是直接重新渲染整个列表。")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `items` is a ref with array value")]),t._v("\nitems"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"七、event-handling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七、event-handling"}},[t._v("#")]),t._v(" 七、Event Handling")]),t._v(" "),s("h3",{attrs:{id:"_1-v-on"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-v-on"}},[t._v("#")]),t._v(" 1. @ | v-on")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("不传参时第一个参数自动接收the native DOM Event object")])]),t._v(" "),s("li",[s("p",[t._v("传参时要传the native DOM Event object需要用"),s("code",[t._v("$event")]),t._v("显式传入。")])])]),t._v(" "),s("h3",{attrs:{id:"_2-event-modifiers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-event-modifiers"}},[t._v("#")]),t._v(" 2. Event Modifiers")]),t._v(" "),s("ul",[s("li",[s("code",[t._v(".stop")]),t._v("：阻止冒泡")]),t._v(" "),s("li",[s("code",[t._v(".prevent")]),t._v("：阻止默认行为")]),t._v(" "),s("li",[s("code",[t._v(".self")]),t._v("：只有当"),s("code",[t._v("event.target")]),t._v("是元素自身时才触发事件。")]),t._v(" "),s("li",[s("code",[t._v(".capture")]),t._v("：使用捕获模式")]),t._v(" "),s("li",[s("code",[t._v(".once")]),t._v("：只触发一次")]),t._v(" "),s("li",[s("code",[t._v(".passive")]),t._v("：主要用于触摸事件，添加后事件处理不会阻止页面滚动，用于改善移动端性能。不要和"),s("code",[t._v(".prevent")]),t._v("一起用。")]),t._v(" "),s("li",[t._v("可以链式调用")]),t._v(" "),s("li",[t._v("注意顺序，如"),s("code",[t._v("@click.self.prevent")]),t._v("和"),s("code",[t._v("@click.prevent.self")]),t._v("的含义是不同的。")])]),t._v(" "),s("h3",{attrs:{id:"_3-按键修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-按键修饰符"}},[t._v("#")]),t._v(" 3. 按键修饰符")]),t._v(" "),s("ul",[s("li",[s("code",[t._v(".enter")])]),t._v(" "),s("li",[s("code",[t._v(".tab")])]),t._v(" "),s("li",[s("code",[t._v(".delete")]),t._v(' (captures both "Delete" and "Backspace" keys)')]),t._v(" "),s("li",[s("code",[t._v(".esc")])]),t._v(" "),s("li",[s("code",[t._v(".space")])]),t._v(" "),s("li",[s("code",[t._v(".up")])]),t._v(" "),s("li",[s("code",[t._v(".down")])]),t._v(" "),s("li",[s("code",[t._v(".left")])]),t._v(" "),s("li",[s("code",[t._v(".right")])])]),t._v(" "),s("p",[t._v("按键按下时才触发：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v(".ctrl")])]),t._v(" "),s("li",[s("code",[t._v(".alt")])]),t._v(" "),s("li",[s("code",[t._v(".shift")])]),t._v(" "),s("li",[s("code",[t._v(".meta")])])]),t._v(" "),s("h3",{attrs:{id:"_4-exact"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-exact"}},[t._v("#")]),t._v(" 4.  "),s("code",[t._v(".exact")])]),t._v(" "),s("p",[t._v("指明仅当按下指定按键时触发。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 当按下 Ctrl 时，即使同时按下 Alt 或 Shift 也会触发 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@click.ctrl")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("onClick"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("A"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 仅当按下 Ctrl 且未按任何其他键时才会触发 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@click.ctrl.exact")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("onCtrlClick"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("A"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 仅当没有按下任何系统按键时触发 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@click.exact")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("onClick"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("A"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"_5-鼠标按键符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-鼠标按键符"}},[t._v("#")]),t._v(" 5. 鼠标按键符")]),t._v(" "),s("ul",[s("li",[s("code",[t._v(".left")])]),t._v(" "),s("li",[s("code",[t._v(".right")])]),t._v(" "),s("li",[s("code",[t._v(".middle")])])]),t._v(" "),s("h2",{attrs:{id:"响应式基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#响应式基础"}},[t._v("#")]),t._v(" 响应式基础")]),t._v(" "),s("h3",{attrs:{id:"_1-dom更新时机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-dom更新时机"}},[t._v("#")]),t._v(" 1. DOM更新时机")]),t._v(" "),s("p",[t._v("更改状态之后，DOM并不会同步进行更新，它会缓存发生的更改，直到下一个生命周期才会进行DOM更新。这样在一个生命周期内就只会发生一次更新。")]),t._v(" "),s("p",[t._v("如果你需要在改变状态之后访问更新后的DOM，需要使用"),s("code",[t._v("nextTick()")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" nextTick "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("increment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// access updated DOM")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);